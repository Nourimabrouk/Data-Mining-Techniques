dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl("AI|artificial", ODI$Programme, ignore.case=T), "AI",
ifelse(grepl("CS|Computer|Computational", ODI$Programme, ignore.case=T), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T), "BIO",
ifelse(grepl("Finance|Duisenberg|QRM", ODI$Programme, ignore.case=T), "FIN",
ifelse( grepl("Econometrics|EDS|EOR", ODI$Programme, ignore.case=T), "ECO",
ifelse(grepl("BA|Business", ODI$Programme, ignore.case=T), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#unique(ODI$Programme)
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/vyly/Desktop/VU_Master/DataMining/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv(".../Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl("AI|artificial", ODI$Programme, ignore.case=T), "AI",
ifelse(grepl("CS|Computer|Computational", ODI$Programme, ignore.case=T), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T), "BIO",
ifelse(grepl("Finance|Duisenberg|QRM", ODI$Programme, ignore.case=T), "FIN",
ifelse( grepl("Econometrics|EDS|EOR", ODI$Programme, ignore.case=T), "ECO",
ifelse(grepl("BA|Business", ODI$Programme, ignore.case=T), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
View(ODI)
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl("AI|artificial", ODI$Programme, ignore.case=T, fixed = TRUE), "AI",
ifelse(grepl("CS|Computer|Computational", ODI$Programme, ignore.case=T, fixed = TRUE), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T, fixed = TRUE), "BIO",
ifelse(grepl("Finance|Duisenberg|QRM|Risk", ODI$Programme, ignore.case=T, fixed = TRUE), "FIN",
ifelse( grepl("Econometrics|EDS|EOR", ODI$Programme, ignore.case=T, fixed = TRUE), "ECO",
ifelse(grepl("BA|Business", ODI$Programme, ignore.case=T, fixed = TRUE ), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
View(ODI)
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl("AI"|"artificial", ODI$Programme, ignore.case=T, fixed = TRUE), "AI",
ifelse(grepl("CS"|"Computer|Computational", ODI$Programme, ignore.case=T, fixed = TRUE), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T, fixed = TRUE), "BIO",
ifelse(grepl("Finance"|"Duisenberg"|"QRM"|"Risk", ODI$Programme, ignore.case=T, fixed = TRUE), "FIN",
ifelse(grepl("Econometrics"|"EDS"|"EOR", ODI$Programme, ignore.case=T, fixed = TRUE), "ECO",
ifelse(grepl("BA"|"Business", ODI$Programme, ignore.case=T, fixed = TRUE ), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl("AI"|"artificial", ODI$Programme, ignore.case=T, fixed = TRUE), "AI",
ifelse(grepl("CS"|"Computer|Computational", ODI$Programme, ignore.case=T, fixed = TRUE), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T, fixed = TRUE), "BIO",
ifelse(grepl("Finance"|"Duisenberg"|"QRM"|"Risk", ODI$Programme, ignore.case=T, fixed = TRUE), "FIN",
ifelse(grepl("Econometrics"|"EDS"|"EOR", ODI$Programme, ignore.case=T, fixed = TRUE), "ECO",
ifelse(grepl("BA"|"Business", ODI$Programme, ignore.case=T, fixed = TRUE ), "BIZ",
"Other"))))))
Programme_cluster =
ifelse(grepl(c("AI","artificial"), ODI$Programme, ignore.case=T, fixed = TRUE), "AI",
ifelse(grepl("CS"|"Computer|Computational", ODI$Programme, ignore.case=T, fixed = TRUE), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T, fixed = TRUE), "BIO",
ifelse(grepl("Finance"|"Duisenberg"|"QRM"|"Risk", ODI$Programme, ignore.case=T, fixed = TRUE), "FIN",
ifelse(grepl("Econometrics"|"EDS"|"EOR", ODI$Programme, ignore.case=T, fixed = TRUE), "ECO",
ifelse(grepl("BA"|"Business", ODI$Programme, ignore.case=T, fixed = TRUE ), "BIZ",
"Other"))))))
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl(paste(c("AI","artificial"), collapse = "|"), ODI$Programme, ignore.case=T, fixed = TRUE), "AI",
ifelse(grepl(paste(c("CS","Computer","Computational"), collapse = "|"), ODI$Programme, ignore.case=T, fixed = TRUE), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T, fixed = TRUE), "BIO",
ifelse(grepl(paste(c("Finance","Duisenberg","QRM","Risk"), collapse = "|"), ODI$Programme, ignore.case=T, fixed = TRUE), "FIN",
ifelse(grepl(paste(c("Econometrics","EDS","EOR"), collapse = "|"), ODI$Programme, ignore.case=T, fixed = TRUE), "ECO",
ifelse(grepl(paste(c("BA","Business"), collapse = "|"), ODI$Programme, ignore.case=T, fixed = TRUE ), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(grepl(paste(c("AI","artificial"), collapse = "|"), ODI$Programme, ignore.case=T), "AI",
ifelse(grepl(paste(c("CS","Computer","Computational"), collapse = "|"), ODI$Programme, ignore.case=T), "CS",
ifelse(grepl("Bio", ODI$Programme, ignore.case=T), "BIO",
ifelse(grepl(paste(c("Finance","Duisenberg","QRM","Risk"), collapse = "|"), ODI$Programme, ignore.case=T), "FIN",
ifelse(grepl(paste(c("Econometrics","EDS","EOR"), collapse = "|"), ODI$Programme, ignore.case=T), "ECO",
ifelse(grepl(paste(c("BA","Business"), collapse = "|"), ODI$Programme, ignore.case=T), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
library(stringr)
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
library(stringr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(str_detect(c("AI","artificial"), ODI$Programme), "AI",
ifelse(str_detect(c("CS","Computer","Computational"), ODI$Programme), "CS",
ifelse(str_detect("Bio", ODI$Programme, ignore.case=T), "BIO",
ifelse(str_detect(c("Finance","Duisenberg","QRM","Risk"), ODI$Programme), "FIN",
ifelse(str_detect(c("Econometrics","EDS","EOR"), ODI$Programme), "ECO",
ifelse(str_detect(c("BA","Business"), ODI$Programme), "BIZ",
"Other"))))))
remove(list = ls())
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(reshape2)
library(plyr)
library(stringr)
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
#raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
raw = read_csv("/Users/Lucas/Documents/Studie/VU/MSc/Data_Mining_Techniques/Data-Mining-Techniques/data/ODI/ODI-2021.csv", col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN"), # Drop non numeric
Stresslevel = as.integer(ifelse(str_detect(Stresslevel, regex('over', ignore_case = T)), NA, Stresslevel)) # Remove non numerical
) %>%
select(-c('Standup')) # Drop standup
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI[,'Stresslevel'][ODI[,'Stresslevel'] < 0 | ODI[,'Stresslevel'] > 100] = NA # Remove outside range (0,100)
Programme_cluster =
ifelse(str_detect(c("AI","artificial"), ODI$Programme), "AI",
ifelse(str_detect(c("CS","Computer","Computational"), ODI$Programme), "CS",
ifelse(str_detect("Bio", ODI$Programme), "BIO",
ifelse(str_detect(c("Finance","Duisenberg","QRM","Risk"), ODI$Programme), "FIN",
ifelse(str_detect(c("Econometrics","EDS","EOR"), ODI$Programme), "ECO",
ifelse(str_detect(c("BA","Business"), ODI$Programme), "BIZ",
"Other"))))))
ODI <- ODI %>%
mutate(
Programme = Programme_cluster,
Date = mdy(Date),
Time = hms(Time))
#####Plotting#####
##Stacked plot's data
df = ODI[,3:7]
colnames(df) <- c("Programme","ML", "IR","St","DB")
#Wide to long for plotting
meltd <- melt(df, id.vars ="Programme",na.rm = T)
#Order the column's value for stacked plot
d <- with(meltd, meltd[order(Programme, variable, value),])
#standardise binary value
d$value = factor(d$value, levels = c("1","0","mu","sigma","ja","nee"), labels = c(1,0,1,0,1,0))
#create a column with value of 1 for the y axis
d$count = rep(1)
#plot
ggplot(data=d, aes(x=variable, y=count, fill=value)) +
geom_bar(stat="identity") +
facet_grid(~Programme) +
labs(title="Student Academic Background Info", x="Course", y="Count", fill="Participation") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
sum(d$Programme =="ECO")
TODO:
