"
Data preprocessing
Data Mining Techniques
Assignment 1
Task 1 A
"
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
data = read_csv2(here('data','ODI', 'ODI-2021.csv'), col_names = TRUE)
data = read_csv2(here('data','ODI', 'ODI-2021.csv'), col_names = TRUE) %>% View()
data = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = TRUE) %>% View()
names(data)
colnames(data)
names =
data = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
colnames(data)
names =
data = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
data = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
data %>% glimpse()
dim(data)
ODI = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
colnames(ODI)
ODI = ODI %>%
pivot_wider(
names_from = DateTime
values_from = DateTime
)
ODI = ODI %>%
pivot_wider(
names_from = DateTime,
values_from = DateTime
)
ODI
colnames(ODI)
ODI = ODI %>%
pivot_wider(
names_from = DateTime,
values_from = DateTime
)
ODI = ODI %>%
pivot_wider(
names_from = DateTime
)
ODI = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
colnames(ODI)
ODI = ODI %>%
pivot_wider(
names_from = DateTime
)
colnames(ODI)
ODI = ODI %>%
separate(DateTime, sep = " ", into = c("Date", "Time"))
ODI = ODI %>%
separate(DateTime, sep = " ", into = c("Date", "Time"))
ODI = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble()
colnames(ODI)
ODI = ODI %>%
separate(DateTime, sep = " ", into = c("Date", "Time"))
ODI %>% slice(1)
ODI = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
colnames(ODI)
ODI = ODI %>%
separate(DateTime, sep = " ", into = c("Date", "Time"))
colnames(ODI)
dim(ODI)
ODI %>% glimpse()
ODI %>% head()
ODI = ODI %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.boolean(MLCourse))
raw
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.boolean(MLCourse))
raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.boolean(MLCourse))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.logical(MLCourse))
ODI %>% head()
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.factor(MLCourse))
colnames(ODI)
dim(ODI)
ODI %>% head()
ODI %>% select(4) %>% unique()
ODI %>% select(i) %>% unique()
for (i in 4:7){
ODI %>% select(i) %>% unique()
}
ODI %>% select(i) %>% unique() %>% print()
for (i in 4:7){
ODI %>% select(i) %>% unique() %>% print()
}
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = MLCourse,
IRCourse = na_if(IRCourse, "unknown"),
StatCourse = na_if(StatCourse, "unknown"),
DBCourse = na_if(DBCourse, "unknown")
)
for (i in 4:7){
ODI %>% select(i) %>% unique() %>% print()
}
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(df$MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"),
StatCourse = na_if(StatCourse, "unknown"),
DBCourse = na_if(DBCourse, "unknown")
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"),
StatCourse = na_if(StatCourse, "unknown"),
DBCourse = na_if(DBCourse, "unknown")
)
ODI %>% head()
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = as.integer(IRCourse == "1") %>% na_if(IRCourse, "unknown"),
StatCourse = na_if(StatCourse, "unknown"),
DBCourse = na_if(DBCourse, "unknown")
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = as.integer(IRCourse == "1"), IRCourse = na_if(IRCourse, "unknown"),
StatCourse = na_if(StatCourse, "unknown"),
DBCourse = na_if(DBCourse, "unknown")
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = as.integer(IRCourse == "1"), IRCourse = na_if(IRCourse, "unknown"),
StatCourse = as.integer(StatCourse == "mu"), StatCourse = na_if(StatCourse, "unknown"),
DBCourse = as.integer(DBCourse == "ja"), DBCourse = na_if(DBCourse, "unknown")
)
colnames(ODI)
dim(ODI)
ODI %>% head()
for (i in 4:7){
ODI %>% select(i) %>% unique() %>% print()
}
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = as.integer(StatCourse == "mu"), StatCourse = na_if(StatCourse, "unknown"),
DBCourse = as.integer(DBCourse == "ja"), DBCourse = na_if(DBCourse, "unknown")
)
colnames(ODI)
dim(ODI)
ODI %>% head()
for (i in 4:7){
ODI %>% select(i) %>% unique() %>% print()
}
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja")
)
colnames(ODI)
dim(ODI)
ODI %>% head()
for (i in 4:7){
ODI %>% select(i) %>% unique() %>% print()
}
# Gender -1 0 1 ?
ODI$Gender %>% head()
# Gender -1 0 1 ?
ODI$Gender %>% unique()
# Gender -1 0 1 ?
ODI$Gender %>% recode(male = 1, female = 2)
# Gender -1 0 1 ?
ODI$Gender %>% recode(unknown = 0, male = 1, female = -1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja")
Gender = recode(Gender, unknown = 0, male = 1, female = -1))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1)
)
# Gender -1 0 1 ?
ODI$Gender
ODI$Chocolate %>% unique()
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1)
Chocolate = as.numeric(as.factor(Chocolate))
)
Chocolate = as.numeric(as.factor(Chocolate)
)
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate))
)
ODI$Chocolate %>% unique()
ODI$Chocolate
raw$Chocolate %>% unique()
ODI$Neighbours
ODI$Neighbours %>% as.numeric()
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)) # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = Neighbours %>% as.numeric() %>% na_if(Neighbours, "NaN"))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)) # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = Neighbours %>% as.numeric() %>% na_if(Neighbours, "NaN"))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)) # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = as.numeric(Neighbours)))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)) # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = as.numeric(Neighbours)
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)) # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = as.numeric(Neighbours)
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)),         # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = as.numeric(Neighbours)
)
ODI$Neighbours %>% as.numeric()
ODI$Neighbours %>% as.numeric() %>% na_if("NaN")
ODI$Neighbours %>% as.numeric() %>% na_if("NaN", >10)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.numeric(Neighbours), "NaN")
)
ODI$Neighbours
ODI$Neighbours %>% mutate(case_when(x>10 ~"NA"))
ODI %>% mutate(Neighbours = case_when(x>10 ~"NA"))
ODI %>% mutate(Neighbours = case_when(Neighbours>10 ~"NA"))
ODI %>% mutate(Neighbours = case_when(Neighbours > 10 ~"NA"))
ODI %>% mutate(Neighbours = case_when(Neighbours <  10 ~ "NA"))
ODI %>% mutate(Neighbours = case_when(Neighbours <  10 ~ NA))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.numeric(Neighbours), "NaN")
)
ODI$Neighbours
ODI$Neighbours %>% unique()
ODI %>% mutate(Neighbours = case_when(Neighbours > 10 ~ NA))
ODI %>%
ODI$Neighbours %>% mutate(Neighbours = case_when(Neighbours > 10 ~ NA))
ODI %>% mutate(Neighbours = case_when(Neighbours > 10 ~ NA))
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.numeric(Neighbours), "NaN")
)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.numeric(Neighbours), "NaN")
)
ODI
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN")
)
ODI$Neighbours %>% unique()
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN")
)
ODI$Neighbours %>% unique()
ODI
ODI[,'Neighbours']
ODI[,'Neighbours'][Neighbours > 10] = NA
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA
ODI$Neighbours %>% unique()
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN") # Drop non numeric
) %>%
select(-c('Standup'))
options(warn=-1)
library(here)
library(tidyverse)
library(lubridate)
library(ggplot2)
colnames(ODI)
dim(ODI)
ODI %>% head()
names = c("DateTime", "Programme", "MLCourse", "IRCourse", "StatCourse", "DBCourse", "Gender", "Chocolate",
"Birthdate", "Neighbours", "Standup", "Stresslevel", "Reward", "RandomNo", "Bedtime", "Goodday1",
"Goodday2")
raw = read_csv(here('data','ODI', 'ODI-2021.csv'), col_names = names) %>% as_tibble() %>% slice(-1)
ODI = raw %>%
separate(DateTime, sep = " ", into = c("Date", "Time")) %>%
mutate(MLCourse = as.integer(MLCourse == "yes"),
IRCourse = na_if(IRCourse, "unknown"), IRCourse = as.integer(IRCourse == "1"),
StatCourse = na_if(StatCourse, "unknown"), StatCourse = as.integer(StatCourse == "mu"),
DBCourse = na_if(DBCourse, "unknown"), DBCourse = as.integer(DBCourse == "ja"),
Gender = recode(Gender, unknown = 0, male = 1, female = -1),
Chocolate = as.numeric(as.factor(Chocolate)), # [1 :"fat" 2 :"I have no idea what you are talking about" 3:"neither" 4 :"slim" 5 :"unknown"]
Neighbours = na_if(as.integer(Neighbours), "NaN") # Drop non numeric
) %>%
select(-c('Standup'))
ODI[,'Neighbours'][ODI[,'Neighbours'] > 10] = NA # Replace higher than 10 (unreasonable values) by NA
ODI %>% head()
ODI %>% select(Stresslevel)
ODI %>% select(Stresslevel) %>% range()
ODI %>% select(Stresslevel) %>% unique
ODI %>% select(Stresslevel) %>% unique()
